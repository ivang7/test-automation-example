plugins {
    id 'java'
    id 'idea'
    id "io.qameta.allure" version "2.8.1"
    id "com.github.ben-manes.versions" version "0.21.0"
    id 'com.adarshr.test-logger' version '1.6.0'
}

group 'com.github.unickq.test-automation-example.java-selenide-gradle-allure'
version '0.1'

sourceCompatibility = 1.8

ext {
    allureVersion = '2.12.1'
    selenideVersion = '5.2.4'
    junitJupiterVersion = '5.4.2'
    restAssuredVersion = '3.3.0'
    slf4jVersion = '1.7.26'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testImplementation("org.junit.platform:junit-platform-launcher:1.4.0")
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitJupiterVersion
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitJupiterVersion
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junitJupiterVersion

    testCompile group: 'com.codeborne', name: 'selenide', version: selenideVersion
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: restAssuredVersion

    testCompile group: 'io.qameta.allure', name: 'allure-java-commons', version: allureVersion
    testCompile group: 'io.qameta.allure', name: 'allure-junit5', version: allureVersion
    testCompile group: 'io.qameta.allure', name: 'allure-selenide', version: allureVersion
    testCompile group: 'io.qameta.allure', name: 'allure-rest-assured', version: allureVersion
    testCompile group: 'io.qameta.allure', name: 'allure-junit-platform', version: allureVersion

    testCompile group: 'org.slf4j', name: 'slf4j-jdk14', version: slf4jVersion
}

allure {
    version = "$allureVersion"
    useJUnit5 {
        version = allureVersion
    }
}

testlogger {
    theme 'mocha-parallel'
    slowThreshold 1  // ms for test running. set to 1ms for all tests time count in console.
    showSummary true
    showPassed true
    showSkipped true
    showFailed true
    showStandardStreams false
    showPassedStandardStreams true
    showSkippedStandardStreams true
    showFailedStandardStreams true
}

test {
    reports.html.enabled = false
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    maxParallelForks = (int) (Runtime.runtime.availableProcessors().intdiv(2) ?: 1)
}


wrapper.gradleVersion = "5.4.1"